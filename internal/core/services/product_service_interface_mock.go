// Code generated by mockery v2.49.0. DO NOT EDIT.

package services

import (
	entities "tech-challenge-fase-1/internal/core/entities"

	mock "github.com/stretchr/testify/mock"
)

// MockProductServiceInterface is an autogenerated mock type for the ProductServiceInterface type
type MockProductServiceInterface struct {
	mock.Mock
}

type MockProductServiceInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockProductServiceInterface) EXPECT() *MockProductServiceInterface_Expecter {
	return &MockProductServiceInterface_Expecter{mock: &_m.Mock}
}

// FindProductByID provides a mock function with given fields: id
func (_m *MockProductServiceInterface) FindProductByID(id string) (*entities.Product, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for FindProductByID")
	}

	var r0 *entities.Product
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*entities.Product, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(string) *entities.Product); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.Product)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockProductServiceInterface_FindProductByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FindProductByID'
type MockProductServiceInterface_FindProductByID_Call struct {
	*mock.Call
}

// FindProductByID is a helper method to define mock.On call
//   - id string
func (_e *MockProductServiceInterface_Expecter) FindProductByID(id interface{}) *MockProductServiceInterface_FindProductByID_Call {
	return &MockProductServiceInterface_FindProductByID_Call{Call: _e.mock.On("FindProductByID", id)}
}

func (_c *MockProductServiceInterface_FindProductByID_Call) Run(run func(id string)) *MockProductServiceInterface_FindProductByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockProductServiceInterface_FindProductByID_Call) Return(_a0 *entities.Product, _a1 error) *MockProductServiceInterface_FindProductByID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockProductServiceInterface_FindProductByID_Call) RunAndReturn(run func(string) (*entities.Product, error)) *MockProductServiceInterface_FindProductByID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockProductServiceInterface creates a new instance of MockProductServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockProductServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockProductServiceInterface {
	mock := &MockProductServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
